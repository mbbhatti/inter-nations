{
	"info": {
		"_postman_id": "18f4030b-a7d0-402e-82ee-70abd40d9641",
		"name": "Inter-Nations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "{{base_url}}/user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"inter-nations\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user"
					]
				},
				"description": "<h3>Create User</h3>\n\n- It takes user request information as JSON.\n- Return error JSON response if user is empty, length < 4 and has duplicate name.\n- Return error if JSON request is wrong.\n- Return success JSON response after creating a user."
			},
			"response": []
		},
		{
			"name": "{{base_url}}/user/1",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/user/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"1"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				},
				"description": "<h3>Delete User</h3>\n\n* Take id as parameters request.\n* Check user exits with this id then remove and return success JSON response else error response."
			},
			"response": []
		},
		{
			"name": "{{base_url}}/group",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Group 1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/group",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"group"
					]
				},
				"description": "<h3>Create Group</h3>\n\n- It takes user request information as JSON.\n- Return error JSON response if group is empty, length < 4 and has duplicate name.\n- Return error if JSON request is wrong.\n- Return success JSON response after creating a group."
			},
			"response": []
		},
		{
			"name": "{{base_url}}/group",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/group/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"group",
						"1"
					]
				},
				"description": "<h3>Delete Group</h3>\n\n* Take id as parameters request. \n* Return error if group has any member.\n* Check group exits and has no member then remove and return success JSON response else error response."
			},
			"response": []
		},
		{
			"name": "{{base_url}}/group/user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"group_id\": 1,\r\n    \"user_id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/group/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"group",
						"user"
					]
				},
				"description": "<h3>Assign member or user to group</h3>\n\n+ Takes JSON request of group ID and user ID.\n+ Return JSON error if user already assigned to the group.\n+ Return JSON error if group or user not exits.\n+ Return success JSON response after assigning user to the group."
			},
			"response": []
		},
		{
			"name": "{{base_url}}/group/user",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/group/1/user/1",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"group",
						"1",
						"user",
						"1"
					]
				},
				"description": "<h3>Remove group user</h3>\n\n+ Takes JSON request of group ID and user ID.\n+ Return JSON error if user not found with this group.\n+ Return JSON error if group or user not exits.\n+ Return success JSON response after removing user from the group."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000"
		}
	]
}